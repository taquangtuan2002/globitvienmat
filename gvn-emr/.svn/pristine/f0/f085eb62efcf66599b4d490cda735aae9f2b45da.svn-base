package com.globits.emr.service.impl;

import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.joda.time.LocalDateTime;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.globits.emr.domain.EncounterType;
import com.globits.emr.dto.EncounterTypeDto;
import com.globits.emr.repository.EncounterTypeRepository;
import com.globits.emr.service.EncounterTypeService;

@Service
public class EncountTypeServiceIpml implements EncounterTypeService {
	@Autowired
	EncounterTypeRepository encounterTypeRepository;

	@Override
	public EncounterTypeDto saveOrUpdate(EncounterTypeDto dto) {
		EncounterType entity = null;
		if (dto.getId() != null) {
			entity = encounterTypeRepository.getById(dto.getId());
		}
		if (entity == null) {
			entity = new EncounterType();
			entity.setCreateDate(LocalDateTime.now());
			entity.setModifyDate(LocalDateTime.now());
		}
		if (dto.getCode() != null) {
			entity.setCode(dto.getCode());
		}
		if (dto.getName() != null) {
			entity.setName(dto.getName());
		}
		if (dto.getDescription() != null) {
			entity.setDescription(dto.getDescription());
		}
		entity = encounterTypeRepository.save(entity);
		return new EncounterTypeDto(entity);

	}

	@Override
	public Boolean delete(UUID id) {
		if (id != null) {
			EncounterType entity;
			Optional<EncounterType> optional = encounterTypeRepository.findById(id);
			if (optional.isPresent()) {
				entity = optional.get();
				encounterTypeRepository.delete(entity);
				return true;
			}else {
				return false;
			}

		}
		return false;
	}

	@Override
	public List<EncounterTypeDto> getAllEncounterTypeDtos() {

		return encounterTypeRepository.getAll();
	}

	@Override
	public EncounterTypeDto deleteVoided(UUID id) {
		EncounterType entity = new EncounterType();
		if (id != null) {
			entity = encounterTypeRepository.getOne(id);
		}
		entity.setVoided(false);
		encounterTypeRepository.save(entity);
		return new EncounterTypeDto(entity);
	}

}
