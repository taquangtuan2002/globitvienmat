package com.globits.emr.service.impl;

import com.globits.core.dto.PersonDto;
import com.globits.core.utils.CommonUtils;
import com.globits.emr.domain.concept.ConceptDatatype;
import com.globits.emr.dto.EncounterTypeDto;
import com.globits.emr.dto.PersonAttributeTypeDto;
import com.globits.emr.dto.VisitTypeDto;
import com.globits.emr.dto.concept.ConceptAnswerDto;
import com.globits.emr.dto.concept.ConceptDatatypeDto;
import com.globits.emr.dto.concept.ConceptDto;
import com.globits.emr.dto.concept.ConceptTypeDto;
import com.globits.emr.service.*;
import com.globits.emr.utils.ConceptUtil;
import com.globits.security.domain.Role;
import com.globits.security.dto.RoleDto;
import com.globits.security.dto.UserDto;
import com.globits.security.service.RoleService;
import com.globits.security.service.UserService;

import org.apache.catalina.filters.SetCharacterEncodingFilter;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import javax.xml.stream.XMLInputFactory;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;

@Service
public class SetupDataServiceImpl implements SetupDataService {

	@Autowired
	private RoleService roleService;

	@Autowired
	private UserService userService;

	@Autowired
	private ConceptDatatypeService conceptDatatypeService;
	@Autowired
	private ConceptTypeService conceptTypeService;
	@Autowired
	private ConceptService conceptService;
	@Autowired
	private VisitTypeService visitTypeService;
	@Autowired
	private EncounterTypeService encounterTypeService;

	@Autowired
	private PersonAttributeTypeService personAttributeTypeService;

	@Override
	public void setupEmrData() {
		try {
			createRoles();
		} catch (XMLStreamException e) {
			e.printStackTrace();
		}
		// create user
		createAdminUser();

		// create concept datatype
		createConceptDataType();
		// create concept type
		createConceptType();
		// create visit type
		createVisitType();
		// create encounttype
		createEncounterType();
		// create personAttributeType
		createPersonAttributeType();
		// create concept
		createConcept();
	}

	private void createAdminUser() {
		UserDto userDto = userService.findByUsername(com.globits.core.Constants.USER_ADMIN_USERNAME);
		if (CommonUtils.isNotNull(userDto)) {
			return;
		}

		userDto = new UserDto();
		userDto.setUsername(com.globits.core.Constants.USER_ADMIN_USERNAME);
		userDto.setPassword("admin");
		userDto.setEmail("admin@globits.net");
		userDto.setActive(true);
		userDto.setDisplayName("Admin User");

		Role role = roleService.findByName(com.globits.core.Constants.ROLE_ADMIN);

		userDto.getRoles().addAll(Arrays.asList(new RoleDto(role)));

		PersonDto person = new PersonDto();
		person.setGender("M");
		person.setFirstName("Admin");
		person.setLastName("User");
		person.setDisplayName("Admin User");

		userDto.setPerson(person);

		try {
			userService.save(userDto);
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}

	private void createRoleIfNotExist(String roleName) {

		if (CommonUtils.isEmpty(roleName)) {
			return;
		}

		Role role = roleService.findByName(roleName);

		if (CommonUtils.isNotNull(role)) {
			return;
		}

		if (role == null) {
			role = new Role();
			role.setName(roleName);
		}

		try {
			roleService.save(role);
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}

	private void createRoles() throws XMLStreamException {

		List<String> roleNames = new ArrayList<>();

		XMLInputFactory inputFactory = XMLInputFactory.newInstance();
		InputStream in = getClass().getClassLoader().getResourceAsStream("sys-roles.xml");
		XMLStreamReader streamReader = inputFactory.createXMLStreamReader(in, "UTF-8");

		streamReader.nextTag();
		streamReader.nextTag();

		while (streamReader.hasNext()) {
			if (streamReader.isStartElement()) {
				switch (streamReader.getLocalName()) {
				case "name": {
					roleNames.add(streamReader.getElementText());
					break;
				}
				}
			}
			streamReader.next();
		}

		streamReader.close();

		for (String roleName : roleNames) {
			createRoleIfNotExist(roleName);
		}
	}

	private void createConceptDataType() {
		// Numeric
		ConceptDatatypeDto conceptData1 = new ConceptDatatypeDto();
		conceptData1.setName("numeric");
		conceptData1.setCode("numeric");
		conceptData1.setDescription("numeric");
		if (!conceptDatatypeService.checkCode(null, conceptData1.getCode())) {
			conceptDatatypeService.saveOrUpdate(null, conceptData1);
		}
		// coded
		ConceptDatatypeDto conceptData2 = new ConceptDatatypeDto();
		conceptData2.setName("coded");
		conceptData2.setCode("coded");
		conceptData2.setDescription("coded");
		if (!conceptDatatypeService.checkCode(null, conceptData2.getCode())) {
			conceptDatatypeService.saveOrUpdate(null, conceptData2);
		}
		// Date
		ConceptDatatypeDto conceptData3 = new ConceptDatatypeDto();
		conceptData3.setName("date");
		conceptData3.setCode("date");
		conceptData3.setDescription("date");
		if (!conceptDatatypeService.checkCode(null, conceptData3.getCode())) {
			conceptDatatypeService.saveOrUpdate(null, conceptData3);
		}
		// boolean
		ConceptDatatypeDto conceptData4 = new ConceptDatatypeDto();
		conceptData4.setName("boolean");
		conceptData4.setCode("boolean");
		conceptData4.setDescription("boolean");
		if (!conceptDatatypeService.checkCode(null, conceptData4.getCode())) {
			conceptDatatypeService.saveOrUpdate(null, conceptData4);
		}
		// Text
		ConceptDatatypeDto conceptData5 = new ConceptDatatypeDto();
		conceptData4.setName("text");
		conceptData4.setCode("text");
		conceptData4.setDescription("text");
		if (!conceptDatatypeService.checkCode(null, conceptData4.getCode())) {
			conceptDatatypeService.saveOrUpdate(null, conceptData4);
		}

	}

	private void createConceptType() {
		// labtest
		ConceptTypeDto conceptType = new ConceptTypeDto();
		conceptType.setName("Labtest");
		conceptType.setCode("labtest");
		conceptType.setDescription("Labtest");
		if (!conceptTypeService.checkCode(null, conceptType.getCode())) {
			conceptTypeService.saveOrUpdate(null, conceptType);
		}
		// diagnostic
		ConceptTypeDto conceptType1 = new ConceptTypeDto();
		conceptType1.setName("diagnostic");
		conceptType1.setCode("diagnostic");
		conceptType1.setDescription("diagnostic");
		if (!conceptTypeService.checkCode(null, conceptType1.getCode())) {
			conceptTypeService.saveOrUpdate(null, conceptType1);
		}
		// Symptom
		ConceptTypeDto conceptType2 = new ConceptTypeDto();
		conceptType2.setName("symptom");
		conceptType2.setCode("symptom");
		conceptType2.setDescription("symptom");
		if (!conceptTypeService.checkCode(null, conceptType2.getCode())) {
			conceptTypeService.saveOrUpdate(null, conceptType2);
		}
		// encounter
		ConceptTypeDto conceptType3 = new ConceptTypeDto();
		conceptType3.setName("encounter");
		conceptType3.setCode("encounter");
		conceptType3.setDescription("encounter");
		if (!conceptTypeService.checkCode(null, conceptType3.getCode())) {
			conceptTypeService.saveOrUpdate(null, conceptType3);
		}
		// misc
		ConceptTypeDto conceptType4 = new ConceptTypeDto();
		conceptType4.setName("misc");
		conceptType4.setCode("misc");
		conceptType4.setDescription("misc");
		if (!conceptTypeService.checkCode(null, conceptType4.getCode())) {
			conceptTypeService.saveOrUpdate(null, conceptType4);
		}
		// drug
		ConceptTypeDto conceptType5 = new ConceptTypeDto();
		conceptType5.setName("drug");
		conceptType5.setCode("durg");
		conceptType5.setDescription("durg");
		if (!conceptTypeService.checkCode(null, conceptType5.getCode())) {
			conceptTypeService.saveOrUpdate(null, conceptType5);
		}
		// Specimen
		ConceptTypeDto conceptType6 = new ConceptTypeDto();
		conceptType6.setName("specimen");
		conceptType6.setCode("specimen");
		conceptType6.setDescription("specimen");
		if (!conceptTypeService.checkCode(null, conceptType6.getCode())) {
			conceptTypeService.saveOrUpdate(null, conceptType6);
		}
	}

	private void createVisitType() {
		// Tái Khám
		VisitTypeDto visitType = new VisitTypeDto();
		visitType.setName("re-examination");
		visitType.setCode("re-examination");
		visitType.setDescription("re-examination");
		if (!visitTypeService.checkCode(null, visitType.getCode())) {
			visitTypeService.saveOrUpdate(visitType);
		}
		// khám lần đầu
		VisitTypeDto visitType1 = new VisitTypeDto();
		visitType1.setName("first_examination");
		visitType1.setCode("first-examination");
		visitType1.setDescription("first_examination");
		if (!visitTypeService.checkCode(null, visitType1.getCode())) {
			visitTypeService.saveOrUpdate(visitType1);
		}
		// khám từ xa
		VisitTypeDto visitType2 = new VisitTypeDto();
		visitType2.setName("remote_examination");
		visitType2.setCode("remote_examination");
		visitType2.setDescription("remote_examination");
		if (!visitTypeService.checkCode(null, visitType2.getCode())) {
			visitTypeService.saveOrUpdate(visitType2);
		}
	}

	private void createPersonAttributeType() {
		// BHYT
		PersonAttributeTypeDto personAttributeTypeDto = new PersonAttributeTypeDto();
		personAttributeTypeDto.setName("bhyt");
		personAttributeTypeDto.setCode("bhyt");
		personAttributeTypeDto.setDescription("bhyt");
		if (!personAttributeTypeService.checkCode(null, personAttributeTypeDto.getCode())) {
			personAttributeTypeService.saveOrUpdate(personAttributeTypeDto);
		}
		// registration code
		PersonAttributeTypeDto personAttributeTypeDto1 = new PersonAttributeTypeDto();
		personAttributeTypeDto.setName("registration_code");
		personAttributeTypeDto.setCode("registration_code");
		personAttributeTypeDto.setDescription("registration_code");
		if (!personAttributeTypeService.checkCode(null, personAttributeTypeDto.getCode())) {
			personAttributeTypeService.saveOrUpdate(personAttributeTypeDto);
		}

	}

	private void createEncounterType() {
		// thăm khám
		EncounterTypeDto encounterTypeDto = new EncounterTypeDto();
		encounterTypeDto.setName("visit");
		encounterTypeDto.setCode("visit");
		encounterTypeDto.setDescription("visit");
		if (!encounterTypeService.checkCode(null, encounterTypeDto.getCode())) {
			encounterTypeService.saveOrUpdate(encounterTypeDto);
		}
		// Chuyển phòng khám
		EncounterTypeDto encounterTypeDto1 = new EncounterTypeDto();
		encounterTypeDto1.setName("change_clinic");
		encounterTypeDto1.setCode("change_clinic");
		encounterTypeDto1.setDescription("change_clinic");
		if (!encounterTypeService.checkCode(null, encounterTypeDto1.getCode())) {
			encounterTypeService.saveOrUpdate(encounterTypeDto1);
		}
		// Đo thi lực
		EncounterTypeDto encounterTypeDto2 = new EncounterTypeDto();
		encounterTypeDto2.setName("visual_acuity_measurement");
		encounterTypeDto2.setCode("visual_acuity_measurement");
		encounterTypeDto2.setDescription("visual_acuity_measurement");
		if (!encounterTypeService.checkCode(null, encounterTypeDto2.getCode())) {
			encounterTypeService.saveOrUpdate(encounterTypeDto2);
		}
		// Đo khúc xạ
		EncounterTypeDto encounterTypeDto3 = new EncounterTypeDto();
		encounterTypeDto3.setName("vefraction_measurement");
		encounterTypeDto3.setCode("Refraction_measurement");
		encounterTypeDto3.setDescription("Refraction_measurement");
		if (!encounterTypeService.checkCode(null, encounterTypeDto3.getCode())) {
			encounterTypeService.saveOrUpdate(encounterTypeDto3);
		}
		// Đo kính
		EncounterTypeDto encounterTypeDto4 = new EncounterTypeDto();
		encounterTypeDto4.setName("Measuring_glasses");
		encounterTypeDto4.setCode("Measuring_glasses");
		encounterTypeDto4.setDescription("Measuring_glasses");
		if (!encounterTypeService.checkCode(null, encounterTypeDto4.getCode())) {
			encounterTypeService.saveOrUpdate(encounterTypeDto4);
		}
	}

	private void createConcept() {
		// trieu chung
		ConceptDto concept1 = new ConceptDto();
		concept1.setCode("symptom");
		concept1.setName("Triệu chứng");
		concept1.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept1.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept1);
		ConceptDto symptom = conceptService.getConceptByCode("symptom");
		// cay mat
		ConceptDto concept1_1 = new ConceptDto();
		concept1_1.setCode("symptom11");
		concept1_1.setName("Cay mắt");
		concept1_1.setParent(symptom);
		concept1_1
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept1_1.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept1_1);
		// giam thi luc dot ngot
		ConceptDto concept1_2 = new ConceptDto();
		concept1_2.setCode("symptom12");
		concept1_2.setName("Giảm thị lực đột ngột");
		concept1_2.setParent(symptom);
		concept1_2
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept1_2.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept1_2);
		// nhin mo vao ban dem
		ConceptDto concept1_3 = new ConceptDto();
		concept1_3.setCode("symptom13");
		concept1_3.setName("Nhìn mờ vào ban đêm");
		concept1_3.setParent(symptom);
		concept1_3
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept1_3.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept1_3);
		// giam thi luc thuong qua
		ConceptDto concept1_4 = new ConceptDto();
		concept1_4.setCode("symptom14");
		concept1_4.setName("Giảm thị lực thoáng qua");
		concept1_4.setParent(symptom);
		concept1_4
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept1_4.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept1_4);
		// Nhìn thấy 2 hình
		ConceptDto concept1_5 = new ConceptDto();
		concept1_5.setCode("symptom15");
		concept1_5.setName("Nhìn thấy 2 hình");
		concept1_5.setParent(symptom);
		concept1_5
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept1_5.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept1_5);
		// Chảy nước mắt
		ConceptDto concept1_6 = new ConceptDto();
		concept1_6.setCode("symptom16");
		concept1_6.setName("Chảy nước mắt");
		concept1_6.setParent(symptom);
		concept1_6
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept1_6.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept1_6);
		// Giảm thị lực từ từ
		ConceptDto concept1_7 = new ConceptDto();
		concept1_7.setCode("symptom17");
		concept1_7.setName("Giảm thị lực từ từ");
		concept1_7.setParent(symptom);
		concept1_7
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept1_7.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept1_7);
		// Nhức đầu
		ConceptDto concept1_8 = new ConceptDto();
		concept1_8.setCode("symptom18");
		concept1_8.setName("Nhưc đầu");
		concept1_8.setParent(symptom);
		concept1_8
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept1_8.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept1_8);
		// Co giật mi
		ConceptDto concept1_9 = new ConceptDto();
		concept1_9.setCode("symptom19");
		concept1_9.setName("Co giật mi");
		concept1_9.setParent(symptom);
		concept1_9
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept1_9.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept1_9);
		// Mắt đổ ghèn
		ConceptDto concept2_0 = new ConceptDto();
		concept2_0.setCode("symptom20");
		concept2_0.setName("Mắt đổ nghèn");
		concept2_0.setParent(symptom);
		concept2_0
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept2_0.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept2_0);
		// Nôn , buồn nôn
		ConceptDto concept2_1 = new ConceptDto();
		concept2_1.setCode("symptom21");
		concept2_1.setName("Nôn, buồn nôn");
		concept2_1.setParent(symptom);
		concept2_1
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept2_1.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept2_1);
		// cộm xồm
		ConceptDto concept2_2 = new ConceptDto();
		concept2_2.setCode("symptom22");
		concept2_2.setName("Cộm xồm");
		concept2_2.setParent(symptom);
		concept2_2
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept2_2.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept2_2);
		// Mắt nhắm ko kín
		ConceptDto concept2_3 = new ConceptDto();
		concept2_3.setCode("symptom23");
		concept2_3.setName("Mắt nhắm ko kín");
		concept2_3.setParent(symptom);
		concept2_3
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept2_3.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept2_3);
		// Sợ ánh sáng
		ConceptDto concept2_4 = new ConceptDto();
		concept2_4.setCode("symptom24");
		concept2_4.setName("Sợ ánh sáng");
		concept2_4.setParent(symptom);
		concept2_4
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept2_4.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept2_4);
		// DỊ vật chấn thương
		ConceptDto concept2_5 = new ConceptDto();
		concept2_5.setCode("symptom25");
		concept2_5.setName("Dị vật , chấn thương");
		concept2_5.setParent(symptom);
		concept2_5
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept2_5.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept2_5);
		// Mờ mắt
		ConceptDto concept2_6 = new ConceptDto();
		concept2_6.setCode("symptom26");
		concept2_6.setName("Mờ mắt");
		concept2_6.setParent(symptom);
		concept2_6
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept2_6.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept2_6);
		// Sưng mi mắt
		ConceptDto concept2_7 = new ConceptDto();
		concept2_7.setCode("symptom27");
		concept2_7.setName("Sưng mi mắt");
		concept2_7.setParent(symptom);
		concept2_7
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept2_7.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept2_7);
		// Đau nhức mắt nhẹ
		ConceptDto concept2_8 = new ConceptDto();
		concept2_8.setCode("symptom28");
		concept2_8.setName("Đau nhức măt nhẹ");
		concept2_8.setParent(symptom);
		concept2_8
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept2_8.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept2_8);
		// Mờ mắt khi nhìn gần
		ConceptDto concept2_9 = new ConceptDto();
		concept2_9.setCode("symptom29");
		concept2_9.setName("Mờ mắt khi nhìn gần");
		concept2_9.setParent(symptom);
		concept2_9
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept2_9.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept2_9);
		// Sụp mí
		ConceptDto concept3_0 = new ConceptDto();
		concept3_0.setCode("symptom30");
		concept3_0.setName("Sụp mí");
		concept3_0.setParent(symptom);
		concept3_0
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept3_0.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept3_0);
		// Đau nhức mắt nhiều
		ConceptDto concept3_1 = new ConceptDto();
		concept3_1.setCode("symptom31");
		concept3_1.setName("Đau nhức mắt nhiều");
		concept3_1.setParent(symptom);
		concept3_1
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept3_1.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept3_1);
		// Mờ mắt khi nhìn xa
		ConceptDto concept3_2 = new ConceptDto();
		concept3_2.setCode("symptom32");
		concept3_2.setName("Mờ mắt khi nhìn xa");
		concept3_2.setParent(symptom);
		concept3_2
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept3_2.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept3_2);
		// Thấy lóa sáng
		ConceptDto concept3_3 = new ConceptDto();
		concept3_3.setCode("symptom33");
		concept3_3.setName("Thấy lóa sáng ");
		concept3_3.setParent(symptom);
		concept3_3
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept3_3.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept3_3);
		// Đau nhức mắt vừa
		ConceptDto concept3_4 = new ConceptDto();
		concept3_4.setCode("symptom34");
		concept3_4.setName("Đau nhức mắt vừa");
		concept3_4.setParent(symptom);
		concept3_4
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept3_4.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept3_4);
		// Mỏi mắt
		ConceptDto concept3_5 = new ConceptDto();
		concept3_5.setCode("symptom35");
		concept3_5.setName("Mỏi mắt");
		concept3_5.setParent(symptom);
		concept3_5
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept3_5.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept3_5);
		// Thấy quầng tan sắc
		ConceptDto concept3_6 = new ConceptDto();
		concept3_6.setCode("symptom36");
		concept3_6.setName("Thấy quầng tan sắc");
		concept3_6.setParent(symptom);
		concept3_6
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept3_6.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept3_6);
		// Đỏ mắt
		ConceptDto concept3_7 = new ConceptDto();
		concept3_7.setCode("symptom37");
		concept3_7.setName("Đỏ mắt");
		concept3_7.setParent(symptom);
		concept3_7
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept3_7.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept3_7);
		// Ngứa mắt
		ConceptDto concept3_8 = new ConceptDto();
		concept3_8.setCode("symptom38");
		concept3_8.setName("Ngứa mắt ");
		concept3_8.setParent(symptom);
		concept3_8
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		concept3_8.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, concept3_8);

		// kham thuc the
		this.createPhysicalExaminationConcept();
	}

	private void createPhysicalExaminationConcept() {
		// create parent kham thuc the
		ConceptDto concept1 = new ConceptDto();
		setConceptParent("pe-0000", "Khám thực thể", concept1);
		ConceptDto physicalExamination = conceptService.getConceptByCode("pe-0000");
		// create chill
		// le bo
		this.createLeboConcept(physicalExamination);
		// mi mat
		this.createMiMatConcept(physicalExamination);
		
		// Mống mắt
		this.createMongMatConcept(physicalExamination);
		// Thủy tinh dịch
		this.createThuyTinhDich(physicalExamination);
		//Vận nhãn
		this.createVanNhan(physicalExamination);
		//Hốc mắt 
		this.createHocMat(physicalExamination);
		//create ket mac
		this.createKetMac(physicalExamination);
		//create thuy tinh the
		this.createThuyTinhThe(physicalExamination);
	}
	private void createThuyTinhThe(ConceptDto parent) {
		// create parent thuy tinh the
		ConceptDto concept9 = new ConceptDto();
		setConceptChill("pe-000003", "Bất thường kết mạc", parent, concept9);
		ConceptDto thuyTinhThe = conceptService.getConceptByCode("pe-000009");
		// create chill
		this.createNhoGianDongTuThuyTinhTheConcept(thuyTinhThe);
		this.createBinhThuongThuyTinhTheConcept(thuyTinhThe);
		this.createHinhThaiDucThuyTinhTheConcept(thuyTinhThe);
		this.createDoDucThuyTinhTheConcept(thuyTinhThe);
		this.createIOLThuyTinhTheConcept(thuyTinhThe);
		this.createViTriDatIOLThuyTinhTheConcept(thuyTinhThe);
		this.createDayChangZinnThuyTinhTheConcept(thuyTinhThe);
		this.createAnhDongTuThuyTinhTheConcept(thuyTinhThe);
		this.createDucBaoSauThuyTinhTheConcept(thuyTinhThe);
		this.createTonThuongKhacThuyTinhTheConcept(thuyTinhThe);
		this.createGhiChuMatPhaiThuyTinhTheConcept(thuyTinhThe);
		this.createGhiChuMatTraiThuyTinhTheConcept(thuyTinhThe);
	}
	private void createKetMac(ConceptDto parent) {
		// create parent mi mat
		ConceptDto concept3 = new ConceptDto();
		setConceptChill("pe-000003", "Bất thường kết mạc", parent, concept3);
		ConceptDto ketMac = conceptService.getConceptByCode("pe-000003");
		// create chill
		this.createNhoGianDongTuKetMacConcept(ketMac);
		this.createHongBinhthuongKetMacConcept(ketMac);
		this.createBatthuongKetMacConcept(ketMac);
		this.createBongDoKetMacConcept(ketMac);
		this.createHinhThaiCuongTuKetMacConcept(ketMac);
		this.createBatThuongCungDoKetMacConcept(ketMac);
		this.createViemKetmacKetMacConcept(ketMac);
		this.createMongKetMacConcept(ketMac);
		this.createBatThuongKhacOKetmacKetMacConcept(ketMac);
		this.createGhiChuMatPhaiKetMacConcept(ketMac);
		this.createGhiChuMatTraiKetMacConcept(ketMac);
	}

	private void createGhiChuMatPhaiKetMacConcept(ConceptDto parent) {
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000310", "Ghi chú mắt phải", parent, concept1_1);
		// save
		conceptService.saveOrUpdate(null, concept1_1);
	}
	private void createGhiChuMatTraiKetMacConcept(ConceptDto parent) {
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000311", "Ghi chú mắt trái", parent, concept1_1);
		// save
		conceptService.saveOrUpdate(null, concept1_1);
	}

	private void createBatThuongKhacOKetmacKetMacConcept(ConceptDto parent) {
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000309", "Bất thường khác ở kết mạc", parent, concept1_1);
		// create concept answer
		// Mat trai
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000030901", "Nhiễm giun chỉ mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030902", "Nhiễm trùng mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030903", "Nhuộm màu kết mạc mắt trái", answer1, conceptanswer1, concept1_1);
		// Mat phai
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000030904", "Nhiễm giun chỉ mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030905", "Nhiễm trùng mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030906", "Nhuộm màu kết mạc mắt phải", answer2, conceptanswer2, concept1_1);
		// save
		conceptService.saveOrUpdate(null, concept1_1);
	}

	private void createMongKetMacConcept(ConceptDto parent) {
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000308", "Mộng", parent, concept1_1);
		// create concept answer
		// Mat trai
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000030801", "Mộng thịt mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030802", "Mộng mỡ mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030803", "Góc trong mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030804", "Góc ngoài mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030805", "Độ 1 mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030806", "Độ 2 mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030807", "Độ 3 mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030808", "Độ 4 mắt trái", answer1, conceptanswer1, concept1_1);
		// Mat phai
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000030809", "Mộng thịt mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030810", "Mộng mỡ mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030811", "Góc trong mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030812", "Góc ngoài mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030813", "Độ 1 mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030814", "Độ 2 mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030815", "Độ 3 mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030816", "Độ 4 mắt phải", answer2, conceptanswer2, concept1_1);
		// save
		conceptService.saveOrUpdate(null, concept1_1);
	}

	private void createViemKetmacKetMacConcept(ConceptDto parent) {
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000307", "Bất thường cùng đồ", parent, concept1_1);
		// create concept answer
		// Mat trai
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000030701", "Tiết tố mủ mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030702", "Tiết tố trong mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030703", "Giả mạc mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030704", "Cấu dính mắt trái", answer1, conceptanswer1, concept1_1);
		// Mat phai
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000030705", "Tiết tố mủ mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030706", "Tiết tố trong mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030707", "Giả mạc mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030708", "Cấu dính mắt phải", answer2, conceptanswer2, concept1_1);
		// save
		conceptService.saveOrUpdate(null, concept1_1);
	}

	private void createBatThuongCungDoKetMacConcept(ConceptDto parent) {
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000306", "Bất thường cùng đồ", parent, concept1_1);
		// create concept answer
		// Mat trai
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000030601", "Cạn mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030602", "Dính mắt trái", answer1, conceptanswer1, concept1_1);
		// Mat phai
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000030603", "Cạn mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030604", "Dính mắt phải", answer2, conceptanswer2, concept1_1);
		// save
		conceptService.saveOrUpdate(null, concept1_1);
		
	}

	private void createHinhThaiCuongTuKetMacConcept(ConceptDto parent) {
		// TODO Auto-generated method stub
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000305", "Hình thái cương tụ", parent, concept1_1);
		// create concept answer
		// Mat trai
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000030501", "Tỏa lan mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030502", "Ở rìa mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030503", "Ở kết mạc nhãn cầu mắt trái", answer1, conceptanswer1, concept1_1);
		// Mat phai
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000030504", "Tỏa lan mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030505", "Ở rìa mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030506", "Ở kết mạc nhãn cầu mắt phải", answer2, conceptanswer2, concept1_1);
		// save
		conceptService.saveOrUpdate(null, concept1_1);
	}

	private void createBongDoKetMacConcept(ConceptDto parent) {
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000304", "Bọng dò", parent, concept1_1);
		// create concept answer
		// Mat trai
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000030401", "Dẹt mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030402", "Xơ mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030403", "Mỏng mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030404", "Quá phát mắt trái", answer1, conceptanswer1, concept1_1);
		// Mat phai
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000030405", "Dẹt mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030406", "Xơ mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030407", "Mỏng mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030408", "Quá phát mắt phải", answer2, conceptanswer2, concept1_1);
		// save
		conceptService.saveOrUpdate(null, concept1_1);
	}

	private void createBatthuongKetMacConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000303", "Bất thường kết mạc", parent, concept1_1);
		// create concept answer
		// Mat trai
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000030301", "Cương tụ rìa mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030302", "Phù nề mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030303", "Xuất huyết mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030304", "Sừng hóa mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030305", "Nhú mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030306", "Sẹo mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030307", "Hột mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030308", "U mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030309", "Cặn lắng mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030310", "Thoái hóa mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030311", "Cương tụ rìa mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000030312", "Khô mắt trái", answer1, conceptanswer1, concept1_1);
		
		// Mat phai
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000030313", "Cương tụ rìa mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030314", "Phù nề mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030315", "Xuất huyết mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030316", "Sừng hóa mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030317", "Nhú mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030318", "Sẹo mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030319", "Hột mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030320", "U mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030321", "Cặn lắng mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030322", "Thoái hóa mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030323", "Cương tụ rìa mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000030324", "Khô mắt phải", answer2, conceptanswer2, concept1_1);
		// save
		conceptService.saveOrUpdate(null, concept1_1);
	}

	private void createHongBinhthuongKetMacConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000302", "Hồng/Bình thường", parent, concept1_1);
		// create concept answer
		// Mat trai
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000030201", "Hồng/Bình thường mắt trái", answer1, conceptanswer1, concept1_1);
		// Mat phai
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000030202", "Hồng / Bình thường mắt phải", answer2, conceptanswer2, concept1_1);
		// save
		conceptService.saveOrUpdate(null, concept1_1);
	}

	private void createNhoGianDongTuKetMacConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000301", "Nhỏ giãn đồng tử", parent, concept1_1);
		// create concept answer
		// Mat trai
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000030101", "Mắt trái", answer1, conceptanswer1, concept1_1);
		// Mat phai
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000030102", "Mắt phải", answer2, conceptanswer2, concept1_1);
		// save
		conceptService.saveOrUpdate(null, concept1_1);
		
	}
	
	private void createGhiChuMatTraiThuyTinhTheConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000912", "Ghi chú mắt trái", parent, concept1_1);
		// save
		conceptService.saveOrUpdate(null, concept1_1);
	}

	private void createGhiChuMatPhaiThuyTinhTheConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000911", "Ghi chú mắt phải", parent, concept1_1);
		// save
		conceptService.saveOrUpdate(null, concept1_1);
	}

	private void createTonThuongKhacThuyTinhTheConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000910", "Tổn thương khác", parent, concept1_1);
		// create concept answer
		// Mat trai
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000091003", "Có tổn thương mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000091004", "Không có mắt trái", answer1, conceptanswer1, concept1_1);
		// Mat phai
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000091001", "Có tổn thương mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000091002", "Không có mắt phải", answer2, conceptanswer2, concept1_1);
				
		// save
		conceptService.saveOrUpdate(null, concept1_1);
	}

	private void createDucBaoSauThuyTinhTheConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000909", "Đục bao sau", parent, concept1_1);
		// create concept answer
		// Mat trai
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000090904", "Độ 1 mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000090905", "Độ 2 mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000090906", "Độ 3 mắt trái", answer1, conceptanswer1, concept1_1);
		// Mat phai
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000090901", "Độ 1 mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000090902", "Độ 2 mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000090903", "Độ 3 mắt phải", answer2, conceptanswer2, concept1_1);
		
		// save
		conceptService.saveOrUpdate(null, concept1_1);
	}

	private void createAnhDongTuThuyTinhTheConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000908", "Ánh đồng tử", parent, concept1_1);
		// create concept answer
		// Mat trai
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000090804", "Hồng mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000090805", "Xám mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000090806", "Không soi được mắt trái", answer1, conceptanswer1, concept1_1);
		// Mat phai
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000090801", "Hồng mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000090802", "Xám mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000090803", "Không soi được mắt phải", answer2, conceptanswer2, concept1_1);
		// save
		conceptService.saveOrUpdate(null, concept1_1);
	}

	private void createDayChangZinnThuyTinhTheConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000907", "Dây chằng Zinn", parent, concept1_1);
		// create concept answer
		// Mat trai
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000090703", "Yếu mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000090704", "Đứt mắt trái", answer1, conceptanswer1, concept1_1);
		// Mat phai
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000090701", "Yếu mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000090702", "Đứt mắt phải", answer2, conceptanswer2, concept1_1);
		
		// save
		conceptService.saveOrUpdate(null, concept1_1);
	}

	private void createViTriDatIOLThuyTinhTheConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000906", "Vị trí đặt IOL", parent, concept1_1);
		// create concept answer
		// Mat trai
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000090603", "Tiền phòng mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000090604", "Hậu phòng mắt trái", answer1, conceptanswer1, concept1_1);
		// Mat phai
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000090601", "Tiền phòng mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000090602", "Lệch nhiều mắt phải", answer2, conceptanswer2, concept1_1);
		
		// save
		conceptService.saveOrUpdate(null, concept1_1);
	}

	private void createIOLThuyTinhTheConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000905", "IOL", parent, concept1_1);
		// create concept answer
		// Mat trai
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000090507", "Đục bao sau(PCO) mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000090508", "Lệch nhiều mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000090509", "Rách bao sau mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000090510", "Hơi lệch mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000090511", "Chính tâm mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000090512", "Đã đặt IOL mắt trái", answer1, conceptanswer1, concept1_1);
		// Mat phai
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000090501", "Đục bao sau(PCO) mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000090502", "Lệch nhiều mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000090503", "Rách bao sau mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000090504", "Hơi lệch mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000090505", "Chính tâm mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000090506", "Đã đặt IOL mắt phải", answer2, conceptanswer2, concept1_1);
		
		// save
		conceptService.saveOrUpdate(null, concept1_1);
		
	}

	private void createDoDucThuyTinhTheConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000904", "Độ đục", parent, concept1_1);
		// create concept answer
		// Mat trai
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000090406", "Độ 1 mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000090407", "Độ 2 mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000090408", "Độ 3 mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000090409", "Độ 4 mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000090410", "Độ 5 mắt trái", answer1, conceptanswer1, concept1_1);
		// Mat phai
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000090401", "Độ 1 mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000090402", "Độ 2 mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000090403", "Độ 3 mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000090404", "Độ 4 mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000090405", "Độ 5 mắt phải", answer2, conceptanswer2, concept1_1);
		
		// save
		conceptService.saveOrUpdate(null, concept1_1);
		
	}

	private void createHinhThaiDucThuyTinhTheConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000903", "Hình thái đục", parent, concept1_1);
		// create concept answer
		// Mat trai
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000090309", "Nhân mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000090310", "Vỏ mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000090311", "Dưới bao mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000090312", "Toàn bộ mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000090313", "Giả tróc bao mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000090314", "Canxi hóa mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000090315", "Lệch T3 mắt trái", answer1, conceptanswer1, concept1_1);
		setConceptAnswer("pe-0000090316", "Đục trắng sữa mắt trái", answer1, conceptanswer1, concept1_1);
		// Mat phai
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000090301", "Nhân mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000090302", "Vỏ mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000090303", "Dưới bao mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000090304", "Toàn bộ mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000090305", "Giả tróc bao mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000090306", "Canxi hóa mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000090307", "Lệch T3 mắt phải", answer2, conceptanswer2, concept1_1);
		setConceptAnswer("pe-0000090308", "Đục trắng sữa mắt phải", answer2, conceptanswer2, concept1_1);
		// save
		conceptService.saveOrUpdate(null, concept1_1);
		
	}

	private void createBinhThuongThuyTinhTheConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000902", "Bình thường", parent, concept1_1);
		// create concept answer
		// Mat trai
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000090202", "Mắt trái", answer1, conceptanswer1, concept1_1);
		// Mat phai
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000090201", "Mắt phải", answer2, conceptanswer2, concept1_1);
		// save
		conceptService.saveOrUpdate(null, concept1_1);
	}

	private void createNhoGianDongTuThuyTinhTheConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000901", "Nhỏ giãn đồng tử", parent, concept1_1);
		// create concept answer
		// Mat trai
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000090102", "Mắt trái", answer1, conceptanswer1, concept1_1);
		// Mat phai
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000090101", "Mắt phải", answer2, conceptanswer2, concept1_1);
		// save
		conceptService.saveOrUpdate(null, concept1_1);
	}
	

	public void createLeboConcept(ConceptDto parent) {
		// create parent le bo
		ConceptDto concept1 = new ConceptDto();
		setConceptChill("pe-000001", "Lệ bộ", parent, concept1);
		ConceptDto LeBo = conceptService.getConceptByCode("pe-000001");
		// create chill
		this.createNhoGianDongTuLeBoConcept(LeBo);
		this.createBinhThuongLeBoConcept(LeBo);
		this.createLeQuanLeBoConcept(LeBo);
		this.createTuyenLeLeBoConcept(LeBo);
		this.createLeDaoLeBoConcept(LeBo);
		this.createGhichuLeBoConcept(LeBo);
	}

	public void createNhoGianDongTuLeBoConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000101", "Nhỏ giãn đồng tử", parent, concept1_1);
		// create concept answer
		// Mat trai
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000010101", "Nhỏ giãn đồng tử mắt phải", answer1, conceptanswer1, concept1_1);
		// Mat phai
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000010102", "Nhỏ giãn đồng tử mắt trái", answer2, conceptanswer2, concept1_1);
		// save
		conceptService.saveOrUpdate(null, concept1_1);
	}

	public void createBinhThuongLeBoConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_2 = new ConceptDto();
		setConceptQuestion("pe-00000102", "Bình thường", parent, concept1_2);
		// create concept answer
		// Binh thuong mat trai
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000010201", "Bình thường mắt trái", answer1, conceptanswer1, concept1_2);
		// Binh thuong mat phai
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000010202", "Bình thường mắt phải", answer2, conceptanswer2, concept1_2);
		// save
		conceptService.saveOrUpdate(null, concept1_2);
	}

	public void createLeQuanLeBoConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_3 = new ConceptDto();
		setConceptQuestion("pe-00000103", "Lệ Quản", parent, concept1_3);
		// create concept answer
		// Bơm lệ quản nước thoát không tốt mắt phải
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000010301", "Bơm lệ quản nước thoát không tốt mắt trái ", answer1, conceptanswer1,
				concept1_3);
		// Trào lệ quản đối diện mắt phải
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000010302", "Trào lệ quản đối diện mắt trái", answer2, conceptanswer2, concept1_3);
		// Trào lệ quản tại chỗ mắt phải
		ConceptAnswerDto conceptanswer3 = new ConceptAnswerDto();
		ConceptDto answer3 = new ConceptDto();
		setConceptAnswer("pe-0000010303", "Trào lệ quản tại chỗ mắt trái", answer3, conceptanswer3, concept1_3);
		// Bơm lệ quản nước thoát không tốt mắt trái
		ConceptAnswerDto conceptanswer4 = new ConceptAnswerDto();
		ConceptDto answer4 = new ConceptDto();
		setConceptAnswer("pe-0000010304", "Bơm lệ quản nước thoát không tốt mắt phải", answer4, conceptanswer4,
				concept1_3);
		// Trào lệ quản đối diện mắt trái
		ConceptAnswerDto conceptanswer5 = new ConceptAnswerDto();
		ConceptDto answer5 = new ConceptDto();
		setConceptAnswer("pe-0000010305", "Trào lệ quản đối diện mắt phải", answer5, conceptanswer5, concept1_3);
		// Trào lệ quản tại chỗ mắt trái
		ConceptAnswerDto conceptanswer6 = new ConceptAnswerDto();
		ConceptDto answer6 = new ConceptDto();
		setConceptAnswer("pe-0000010306", "Trào lệ quản tại chỗ mắt phải", answer6, conceptanswer6, concept1_3);
		// save
		conceptService.saveOrUpdate(null, concept1_3);
	}

	public void createTuyenLeLeBoConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_4 = new ConceptDto();
		setConceptQuestion("pe-00000104", "Tuyến lệ", parent, concept1_4);
		// create concept answer
		// Mat trai
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000010401", "Viêm tuyến lệ mắt trái", answer1, conceptanswer1, concept1_4);
		// Mat phai
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000010402", "Viêm tuyến lệ mắt phải", answer2, conceptanswer2, concept1_4);
		// save
		conceptService.saveOrUpdate(null, concept1_4);
	}

	public void createLeDaoLeBoConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_5 = new ConceptDto();
		setConceptQuestion("pe-00000105", "Lệ Đạo", parent, concept1_5);
		// create concept answer
		// Bơm lệ quản nước thoát không tốt mắt phải
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000010501", "Viêm lệ đạo mắt trái", answer1, conceptanswer1, concept1_5);
		// Trào lệ quản đối diện mắt phải
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000010502", "Hẹp lệ đạo mắt trái", answer2, conceptanswer2, concept1_5);
		// Trào lệ quản tại chỗ mắt phải
		ConceptAnswerDto conceptanswer3 = new ConceptAnswerDto();
		ConceptDto answer3 = new ConceptDto();
		setConceptAnswer("pe-0000010503", "Chảy nước mắt sống trái", answer3, conceptanswer3, concept1_5);
		// Bơm lệ quản nước thoát không tốt mắt trái
		ConceptAnswerDto conceptanswer4 = new ConceptAnswerDto();
		ConceptDto answer4 = new ConceptDto();
		setConceptAnswer("pe-0000010504", "Viêm lệ đạo mắt phải", answer4, conceptanswer4, concept1_5);
		// Trào lệ quản đối diện mắt trái
		ConceptAnswerDto conceptanswer5 = new ConceptAnswerDto();
		ConceptDto answer5 = new ConceptDto();
		setConceptAnswer("pe-0000010505", "Hẹp lệ đạo mắt phải", answer5, conceptanswer5, concept1_5);
		// Trào lệ quản tại chỗ mắt trái
		ConceptAnswerDto conceptanswer6 = new ConceptAnswerDto();
		ConceptDto answer6 = new ConceptDto();
		setConceptAnswer("pe-0000010506", "Chảy nước mắt sống phải", answer6, conceptanswer6, concept1_5);
		// save
		conceptService.saveOrUpdate(null, concept1_5);
	}

	public void createGhichuLeBoConcept(ConceptDto parent) {
		// create Ghi chu mat trai
		ConceptDto concept1_6 = new ConceptDto();
		setConceptQuestion("pe-00000106", "Ghi chú mắt trái", parent, concept1_6);
		// save
		conceptService.saveOrUpdate(null, concept1_6);
		// create Ghi chu mat trai
		ConceptDto concept1_7 = new ConceptDto();
		setConceptQuestion("pe-00000107", "Ghi chú mắt phải", parent, concept1_7);
		// save
		conceptService.saveOrUpdate(null, concept1_7);
	}

	public void createMiMatConcept(ConceptDto parent) {
		// create parent mi mat
		ConceptDto concept1 = new ConceptDto();
		setConceptChill("pe-000002", "Mi mắt", parent, concept1);
		ConceptDto MiMat = conceptService.getConceptByCode("pe-000002");
		// create chill
		this.createNhoGianDongTuMiMatConcept(MiMat);
		this.createBinhThuongMiMatConcept(MiMat);
		this.createBatThuongBoMiMiMatConcept(MiMat);
		this.createLongMiMiMatConcept(MiMat);
		this.createDangViemMiMatConcept(MiMat);
		this.createTinhTrangKhacMiMatConcept(MiMat);
		this.createDaMiMiMatConcept(MiMat);
		this.createDoSupMiMiMatConcept(MiMat);
		this.createMGDMiMatConcept(MiMat);
		this.createGhiChuMiMatConcept(MiMat);
	}

	public void createNhoGianDongTuMiMatConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000201", "Nhỏ giãn đồng tử", parent, concept1_1);
		// create concept answer
		// Mat trai
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000020101", "Mắt trái", answer1, conceptanswer1, concept1_1);
		// Mat phai
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000020102", "Mắt phải", answer2, conceptanswer2, concept1_1);
		// save
		conceptService.saveOrUpdate(null, concept1_1);
	}

	public void createBinhThuongMiMatConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_2 = new ConceptDto();
		setConceptQuestion("pe-00000202", "Bình thường", parent, concept1_2);
		// create concept answer
		// Binh thuong mat trai
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000020201", "Bình thường mắt trái", answer1, conceptanswer1, concept1_2);
		// Binh thuong mat phai
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000020202", "Bình thường mắt trái", answer2, conceptanswer2, concept1_2);
		// save
		conceptService.saveOrUpdate(null, concept1_2);
	}

	public void createBatThuongBoMiMiMatConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_3 = new ConceptDto();
		setConceptQuestion("pe-00000203", "Bất thường bờ mi", parent, concept1_3);
		// create concept answer
		// phu
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000020301", "Phù mắt trái", answer1, conceptanswer1, concept1_3);
		// seo da mi
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000020302", "Sẹo da mi mắt trái", answer2, conceptanswer2, concept1_3);
		// sung ne
		ConceptAnswerDto conceptanswer3 = new ConceptAnswerDto();
		ConceptDto answer3 = new ConceptDto();
		setConceptAnswer("pe-0000020303", "Sưng nề mắt trái", answer3, conceptanswer3, concept1_3);
		// sup mi
		ConceptAnswerDto conceptanswer4 = new ConceptAnswerDto();
		ConceptDto answer4 = new ConceptDto();
		setConceptAnswer("pe-0000020304", "Sụp mi mắt trái", answer4, conceptanswer4, concept1_3);
		// khuyet mi
		ConceptAnswerDto conceptanswer5 = new ConceptAnswerDto();
		ConceptDto answer5 = new ConceptDto();
		setConceptAnswer("pe-0000020305", "Khuyết mi mắt trái", answer5, conceptanswer5, concept1_3);
		// ho mi
		ConceptAnswerDto conceptanswer6 = new ConceptAnswerDto();
		ConceptDto answer6 = new ConceptDto();
		setConceptAnswer("pe-0000020306", "Hở mi mắt trái", answer6, conceptanswer6, concept1_3);
		// lat mi
		ConceptAnswerDto conceptanswer7 = new ConceptAnswerDto();
		ConceptDto answer7 = new ConceptDto();
		setConceptAnswer("pe-0000020307", "Lật mi mắt trái", answer7, conceptanswer7, concept1_3);
		// tre mi
		ConceptAnswerDto conceptanswer8 = new ConceptAnswerDto();
		ConceptDto answer8 = new ConceptDto();
		setConceptAnswer("pe-0000020308", "Trễ mi mắt trái", answer8, conceptanswer8, concept1_3);
		// phu
		ConceptAnswerDto conceptanswer9 = new ConceptAnswerDto();
		ConceptDto answer9 = new ConceptDto();
		setConceptAnswer("pe-0000020309", "Phù mắt phải", answer9, conceptanswer9, concept1_3);
		// seo da mi
		ConceptAnswerDto conceptanswer10 = new ConceptAnswerDto();
		ConceptDto answer10 = new ConceptDto();
		setConceptAnswer("pe-0000020310", "Sẹo da mi mắt phải", answer10, conceptanswer10, concept1_3);
		// sung ne
		ConceptAnswerDto conceptanswer11 = new ConceptAnswerDto();
		ConceptDto answer11 = new ConceptDto();
		setConceptAnswer("pe-0000020311", "Sưng nề mắt phải", answer11, conceptanswer11, concept1_3);
		// sup mi
		ConceptAnswerDto conceptanswer12 = new ConceptAnswerDto();
		ConceptDto answer12 = new ConceptDto();
		setConceptAnswer("pe-0000020312", "Sụp mi mắt phải", answer12, conceptanswer12, concept1_3);
		// khuyet mi
		ConceptAnswerDto conceptanswer13 = new ConceptAnswerDto();
		ConceptDto answer13 = new ConceptDto();
		setConceptAnswer("pe-0000020313", "Khuyết mi mắt phải", answer13, conceptanswer13, concept1_3);
		// ho mi
		ConceptAnswerDto conceptanswer14 = new ConceptAnswerDto();
		ConceptDto answer14 = new ConceptDto();
		setConceptAnswer("pe-0000020314", "Hở mi mắt phải", answer14, conceptanswer14, concept1_3);
		// lat mi
		ConceptAnswerDto conceptanswer15 = new ConceptAnswerDto();
		ConceptDto answer15 = new ConceptDto();
		setConceptAnswer("pe-0000020315", "Lật mi mắt phải", answer15, conceptanswer15, concept1_3);
		// tre mi
		ConceptAnswerDto conceptanswer16 = new ConceptAnswerDto();
		ConceptDto answer16 = new ConceptDto();
		setConceptAnswer("pe-0000020316", "Trễ mi mắt phải", answer16, conceptanswer16, concept1_3);
		// save
		conceptService.saveOrUpdate(null, concept1_3);
	}

	public void createLongMiMiMatConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_4 = new ConceptDto();
		setConceptQuestion("pe-00000204","Lông mi", parent, concept1_4);
		// create concept answer
		// Mi tren
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000020401","Mi trên mắt trái", answer1, conceptanswer1, concept1_4);
		// Mi duoi
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000020402","Mi dưới mắt trái", answer2, conceptanswer2, concept1_4);
		// Quam
		ConceptAnswerDto conceptanswer3 = new ConceptAnswerDto();
		ConceptDto answer3 = new ConceptDto();
		setConceptAnswer("pe-0000020403","Quặm mắt trái", answer3, conceptanswer3, concept1_4);
		// Long xieu
		ConceptAnswerDto conceptanswer4 = new ConceptAnswerDto();
		ConceptDto answer4 = new ConceptDto();
		setConceptAnswer("pe-0000020404","Lông xiêu mắt trái", answer4, conceptanswer4, concept1_4);
		// Mi tren
		ConceptAnswerDto conceptanswer5 = new ConceptAnswerDto();
		ConceptDto answer5 = new ConceptDto();
		setConceptAnswer("pe-0000020405","Mi trên mắt phải", answer5, conceptanswer5, concept1_4);
		// Mi duoi
		ConceptAnswerDto conceptanswer6 = new ConceptAnswerDto();
		ConceptDto answer6 = new ConceptDto();
		setConceptAnswer("pe-0000020406","Mi dưới mắt phải", answer6, conceptanswer6, concept1_4);
		// Quam
		ConceptAnswerDto conceptanswer7 = new ConceptAnswerDto();
		ConceptDto answer7 = new ConceptDto();
		setConceptAnswer("pe-0000020407","Quặm mắt phải", answer7, conceptanswer7, concept1_4);
		// Long xieu
		ConceptAnswerDto conceptanswer8 = new ConceptAnswerDto();
		ConceptDto answer8 = new ConceptDto();
		setConceptAnswer("pe-0000020408","Lông xiêu mắt phải", answer8, conceptanswer8, concept1_4);
		// save
		conceptService.saveOrUpdate(null, concept1_4);
	}
	
	public void createDangViemMiMatConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_5 = new ConceptDto();
		setConceptQuestion("pe-00000205","Dạng viêm", parent, concept1_5);
		// create concept answer
		// Chap
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000020501","Chắp", answer1, conceptanswer1, concept1_5);
		// Leo
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000020502","Lẹo", answer2, conceptanswer2, concept1_5);
		// U mi
		ConceptAnswerDto conceptanswer3 = new ConceptAnswerDto();
		ConceptDto answer3 = new ConceptDto();
		setConceptAnswer("pe-0000020503","U mi", answer3, conceptanswer3, concept1_5);
		// Chap
		ConceptAnswerDto conceptanswer4 = new ConceptAnswerDto();
		ConceptDto answer4 = new ConceptDto();
		setConceptAnswer("pe-0000020504","Chắp", answer4, conceptanswer4, concept1_5);
		// Leo
		ConceptAnswerDto conceptanswer5 = new ConceptAnswerDto();
		ConceptDto answer5 = new ConceptDto();
		setConceptAnswer("pe-0000020505","Lẹo", answer5, conceptanswer5, concept1_5);
		// U mi
		ConceptAnswerDto conceptanswer6 = new ConceptAnswerDto();
		ConceptDto answer6 = new ConceptDto();
		setConceptAnswer("pe-0000020506","U mi", answer6, conceptanswer6, concept1_5);
		// save
		conceptService.saveOrUpdate(null, concept1_5);
	}
	
	public void createTinhTrangKhacMiMatConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_6 = new ConceptDto();
		setConceptQuestion("pe-00000206","Tình trạng khác", parent, concept1_6);
		// create concept answer
		// Thoai hoa
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000020601","Thoái hóa mắt trái", answer1, conceptanswer1, concept1_6);
		// Nhiem sinh trung
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000020602","Nhiễm sinh trùng mắt trái", answer2, conceptanswer2, concept1_6);
		// Thoai hoa
		ConceptAnswerDto conceptanswer3 = new ConceptAnswerDto();
		ConceptDto answer3 = new ConceptDto();
		setConceptAnswer("pe-0000020603","Thoái hóa mắt phải", answer3, conceptanswer3, concept1_6);
		// Nhiem sinh trung
		ConceptAnswerDto conceptanswer4 = new ConceptAnswerDto();
		ConceptDto answer4 = new ConceptDto();
		setConceptAnswer("pe-0000020604","Nhiễm sinh trùng mắt phải", answer4, conceptanswer4, concept1_6);
		// save
		conceptService.saveOrUpdate(null, concept1_6);
	}
	
	public void createDaMiMiMatConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_7 = new ConceptDto();
		setConceptQuestion("pe-00000207","Da mi", parent, concept1_7);
		// create concept answer
		// Du da mi
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000020701","Dư da mi mắt trái", answer1, conceptanswer1, concept1_7);
		// Not ruoi
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000020702","Nốt ruồi mắt trái", answer2, conceptanswer2, concept1_7);
		// Du da mi
		ConceptAnswerDto conceptanswer3 = new ConceptAnswerDto();
		ConceptDto answer3 = new ConceptDto();
		setConceptAnswer("pe-0000020703","Dư da mi mắt phải", answer3, conceptanswer3, concept1_7);
		// Not ruoi
		ConceptAnswerDto conceptanswer4 = new ConceptAnswerDto();
		ConceptDto answer4 = new ConceptDto();
		setConceptAnswer("pe-0000020704","Nốt ruồi mắt phải", answer4, conceptanswer4, concept1_7);
		// save
		conceptService.saveOrUpdate(null, concept1_7);
	}
	
	public void createDoSupMiMiMatConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_8 = new ConceptDto();
		setConceptQuestion("pe-00000208","Độ sụp mi", parent, concept1_8);
		// create concept answer
		// Chap
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000020801","Độ 1 mắt trái", answer1, conceptanswer1, concept1_8);
		// Leo
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000020802","Độ 2 mắt trái", answer2, conceptanswer2, concept1_8);
		// U mi
		ConceptAnswerDto conceptanswer3 = new ConceptAnswerDto();
		ConceptDto answer3 = new ConceptDto();
		setConceptAnswer("pe-0000020803","Độ 3 mắt trái", answer3, conceptanswer3, concept1_8);
		// Chap
		ConceptAnswerDto conceptanswer4 = new ConceptAnswerDto();
		ConceptDto answer4 = new ConceptDto();
		setConceptAnswer("pe-0000020804","Độ 1 mắt phải", answer4, conceptanswer4, concept1_8);
		// Leo
		ConceptAnswerDto conceptanswer5 = new ConceptAnswerDto();
		ConceptDto answer5 = new ConceptDto();
		setConceptAnswer("pe-0000020805","Độ 2 mắt phải", answer5, conceptanswer5, concept1_8);
		// U mi
		ConceptAnswerDto conceptanswer6 = new ConceptAnswerDto();
		ConceptDto answer6 = new ConceptDto();
		setConceptAnswer("pe-0000020806","Độ 3 mắt phải", answer6, conceptanswer6, concept1_8);
		// save
		conceptService.saveOrUpdate(null, concept1_8);
	}
	
	public void createMGDMiMatConcept(ConceptDto parent) {
		// create concept question
		ConceptDto concept1_9 = new ConceptDto();
		setConceptQuestion("pe-00000209","MGD", parent, concept1_9);
		// create concept answer
		// Stage 1
		ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
		ConceptDto answer1 = new ConceptDto();
		setConceptAnswer("pe-0000020901","Stage 1 mắt trái", answer1, conceptanswer1, concept1_9);
		// Stage 2
		ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
		ConceptDto answer2 = new ConceptDto();
		setConceptAnswer("pe-0000020902","Stage 2 mắt trái", answer2, conceptanswer2, concept1_9);
		// Stage 3
		ConceptAnswerDto conceptanswer3 = new ConceptAnswerDto();
		ConceptDto answer3 = new ConceptDto();
		setConceptAnswer("pe-0000020903","Stage 3 mắt trái", answer3, conceptanswer3, concept1_9);
		// Stage 4
		ConceptAnswerDto conceptanswer4 = new ConceptAnswerDto();
		ConceptDto answer4 = new ConceptDto();
		setConceptAnswer("pe-0000020904","Stage 4 mắt trái", answer4, conceptanswer4, concept1_9);
		// Cong voi benh tat
		ConceptAnswerDto conceptanswer5 = new ConceptAnswerDto();
		ConceptDto answer5 = new ConceptDto();
		setConceptAnswer("pe-0000020905","Plus disease mắt trái", answer5, conceptanswer5, concept1_9);
		// Stage 1
		ConceptAnswerDto conceptanswer6 = new ConceptAnswerDto();
		ConceptDto answer6 = new ConceptDto();
		setConceptAnswer("pe-0000020906","Stage 1 mắt phải", answer6, conceptanswer6, concept1_9);
		// Stage 2
		ConceptAnswerDto conceptanswer7 = new ConceptAnswerDto();
		ConceptDto answer7 = new ConceptDto();
		setConceptAnswer("pe-0000020907","Stage 2 mắt phải", answer7, conceptanswer7, concept1_9);
		// Stage 3
		ConceptAnswerDto conceptanswer8 = new ConceptAnswerDto();
		ConceptDto answer8 = new ConceptDto();
		setConceptAnswer("pe-0000020908","Stage 3 mắt phải", answer8, conceptanswer8, concept1_9);
		// Stage 4
		ConceptAnswerDto conceptanswer9 = new ConceptAnswerDto();
		ConceptDto answer9 = new ConceptDto();
		setConceptAnswer("pe-0000020909","Stage 4 mắt phải", answer9, conceptanswer9, concept1_9);
		// Cong voi benh tat
		ConceptAnswerDto conceptanswer10 = new ConceptAnswerDto();
		ConceptDto answer10 = new ConceptDto();
		setConceptAnswer("pe-00000209010","Plus disease mắt phải", answer10, conceptanswer10, concept1_9);
		// save
		conceptService.saveOrUpdate(null, concept1_9);
	}
	public void createGhiChuMiMatConcept(ConceptDto parent) {
		// create
		ConceptDto concept1_10 = new ConceptDto();
		setConceptQuestion("pe-00000210","Ghi chú mắt trái", parent, concept1_10);
		// save
		conceptService.saveOrUpdate(null, concept1_10);
		
		ConceptDto concept1_11 = new ConceptDto();
		setConceptQuestion("pe-00000211","Ghi chú mắt phải", parent, concept1_11);
		// save
		conceptService.saveOrUpdate(null, concept1_11);
	}
	
	// Mong mat start
	public void createMongMatConcept(ConceptDto parent) {
		ConceptDto concept = new ConceptDto();
		setConceptChill("pe-000007", "Mống mắt", parent, concept);
		ConceptDto mongMat = conceptService.getConceptByCode("pe-000007");
		// Create child
		this.createNhoGianDongTuMongMat(mongMat);
		this.createBinhThuongMongMat(mongMat);
		this.createBatThuongMongMat(mongMat);
		this.createDaThucHienMongMat(mongMat);
		this.createGhichuMongMat(mongMat);
	}

	public void createNhoGianDongTuMongMat(ConceptDto parent) {
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-00000701", "Nhỏ giãn đồng tử", parent, concept1_1);
		// Create concept answer
		ConceptAnswerDto conceptAnswer = new ConceptAnswerDto();
		ConceptDto answer = new ConceptDto();
		setConceptAnswer("pe-0000070101", "Mắt phải", answer, conceptAnswer, concept1_1);
		setConceptAnswer("pe-0000070102", "Mắt trái", answer, conceptAnswer, concept1_1);
		conceptService.saveOrUpdate(null, concept1_1);
	}

	public void createBinhThuongMongMat(ConceptDto parent) {
		ConceptDto concept1_2 = new ConceptDto();
		setConceptQuestion("pe-00000702", "Bình thường", parent, concept1_2);
		// Create concept answer
		ConceptAnswerDto conceptAnswer = new ConceptAnswerDto();
		ConceptDto answer = new ConceptDto();
		setConceptAnswer("pe-0000070201", "Bình thường mắt phải", answer, conceptAnswer, concept1_2);
		setConceptAnswer("pe-0000070202", "Bình thường mắt trái", answer, conceptAnswer, concept1_2);
		conceptService.saveOrUpdate(null, concept1_2);
	}

	public void createBatThuongMongMat(ConceptDto parent) {
		ConceptDto concept1_3 = new ConceptDto();
		setConceptQuestion("pe-00000703", "Bất thường", parent, concept1_3);
		// Create concept answer
		ConceptAnswerDto conceptAnswer = new ConceptAnswerDto();
		ConceptDto answer = new ConceptDto();
		setConceptAnswer("pe-0000070301", "Xơ teo mắt phải", answer, conceptAnswer, concept1_3);
		setConceptAnswer("pe-0000070302", "Cương tụ mắt phải", answer, conceptAnswer, concept1_3);
		setConceptAnswer("pe-0000070303", "Tân mạch mắt phải", answer, conceptAnswer, concept1_3);
		setConceptAnswer("pe-0000070304", "Phòi mắt phải", answer, conceptAnswer, concept1_3);
		setConceptAnswer("pe-0000070305", "Kẹt mắt phải", answer, conceptAnswer, concept1_3);
		setConceptAnswer("pe-0000070306", "Khuyết mắt phải", answer, conceptAnswer, concept1_3);
		setConceptAnswer("pe-0000070307", "Bussaca mắt phải", answer, conceptAnswer, concept1_3);
		setConceptAnswer("pe-0000070308", "Koepper mắt phải", answer, conceptAnswer, concept1_3);
		setConceptAnswer("pe-0000070309", "Xơ teo mắt trái", answer, conceptAnswer, concept1_3);
		setConceptAnswer("pe-0000070310", "Cương tụ mắt trái", answer, conceptAnswer, concept1_3);
		setConceptAnswer("pe-0000070311", "Tân mạch mắt trái", answer, conceptAnswer, concept1_3);
		setConceptAnswer("pe-0000070312", "Phòi mắt trái", answer, conceptAnswer, concept1_3);
		setConceptAnswer("pe-0000070313", "Kẹt mắt trái", answer, conceptAnswer, concept1_3);
		setConceptAnswer("pe-0000070314", "Khuyết mắt trái", answer, conceptAnswer, concept1_3);
		setConceptAnswer("pe-0000070315", "Bussaca mắt trái", answer, conceptAnswer, concept1_3);
		setConceptAnswer("pe-0000070316", "Koepper mắt trái", answer, conceptAnswer, concept1_3);
		conceptService.saveOrUpdate(null, concept1_3);
	}

	public void createDaThucHienMongMat(ConceptDto parent) {
		ConceptDto concept1_4 = new ConceptDto();
		setConceptQuestion("pe-00000704", "Đã thực hiện", parent, concept1_4);
		// Create concept answer
		ConceptAnswerDto conceptAnswer = new ConceptAnswerDto();
		ConceptDto answer = new ConceptDto();
		setConceptAnswer("pe-0000070401", "Laser mống mắt ngoại vi mắt phải", answer, conceptAnswer, concept1_4);
		setConceptAnswer("pe-0000070402", "Laser tạo hình mống mắt mắt phải", answer, conceptAnswer, concept1_4);
		setConceptAnswer("pe-0000070403", "Laser mống mắt ngoại vi mắt trái", answer, conceptAnswer, concept1_4);
		setConceptAnswer("pe-0000070404", "Laser tạo hình mống mắt mắt trái", answer, conceptAnswer, concept1_4);
		conceptService.saveOrUpdate(null, concept1_4);
	}

	public void createGhichuMongMat(ConceptDto parent) {
		ConceptDto concept1_5 = new ConceptDto();
		setConceptQuestion("pe-00000705", "Ghi chú mắt phải", parent, concept1_5);
		setConceptQuestion("pe-00000706", "Ghi chú mắt trái", parent, concept1_5);
		conceptService.saveOrUpdate(null, concept1_5);
	}
	// Mong mat end



	private void createThuyTinhDich(ConceptDto parent) {
	// create parent Thủy tinh dịch
	ConceptDto concept1 = new ConceptDto();
	setConceptChill("pe-000010", "Thủy tinh dịch", parent, concept1);
	ConceptDto thuyTinhDich = conceptService.getConceptByCode("pe-000010");
	// create chill
	this.createNhoGianDongTuThuyTinhDichConcept(thuyTinhDich);
	this.createBinhThuongThuyTinhDichConcept(thuyTinhDich);
	this.createBatThuongThuyTinhDichConcept(thuyTinhDich);

	}
//
private void createNhoGianDongTuThuyTinhDichConcept(ConceptDto thuyTinhDich) {
	// create concept question
	ConceptDto concept1_1 = new ConceptDto();
	setConceptQuestion("pe-00000301", "Nhỏ giãn đồng tử thủy tinh dịch", thuyTinhDich, concept1_1);
	// create concept answer
	// Mat trai
	ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
	ConceptDto answer1 = new ConceptDto();
	setConceptAnswer("pe-0000030101", "Nhỏ giãn đồng tử thủy tinh dịch mắt trái", answer1, conceptanswer1,
			concept1_1);
	// Mat phai
	ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
	ConceptDto answer2 = new ConceptDto();
	setConceptAnswer("pe-0000030102", "Nhỏ giãn đồng tử thủy tinh dịch mắt phải", answer2, conceptanswer2,
			concept1_1);
	// save
	conceptService.saveOrUpdate(null, concept1_1);
}
private void createBinhThuongThuyTinhDichConcept(ConceptDto thuyTinhDich) {
	// create concept question
	ConceptDto concept1_2 = new ConceptDto();
	setConceptQuestion("pe-00000302", "Bình thường", thuyTinhDich, concept1_2);
	// create concept answer
// Binh thuong
	ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
	ConceptDto answer1 = new ConceptDto();
	setConceptAnswer("pe-0000030201", "Bình thường mắt trái", answer1, conceptanswer1, concept1_2);
	//phải
	ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
	ConceptDto answer2 = new ConceptDto();
	setConceptAnswer("pe-0000030202", "Bình thường mắt phải", answer2, conceptanswer2, concept1_2);
	// save
	conceptService.saveOrUpdate(null, concept1_2);
}
//
private void createBatThuongThuyTinhDichConcept(ConceptDto thuyTinhDich) {
// create concept question
	ConceptDto concept1_3 = new ConceptDto();
	setConceptQuestion("pe-00000303", "Bất thường Thủy Tinh Dịch", thuyTinhDich, concept1_3);
	// create concept answer
	//
	ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
	ConceptDto answer1 = new ConceptDto();
	setConceptAnswer("pe-0000030301", "Đục mắt trái", answer1, conceptanswer1, concept1_3);
	// xuất huyết mắt trái
ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
	ConceptDto answer2 = new ConceptDto();
	setConceptAnswer("pe-0000030302", "Xuất huyết mắt trái", answer2, conceptanswer2, concept1_3);
	// Bóng pha lê mắt trái
	ConceptAnswerDto conceptanswer3 = new ConceptAnswerDto();
	ConceptDto answer3 = new ConceptDto();
	setConceptAnswer("pe-0000030303", "Bóng pha lê thể sau mắt trái", answer3, conceptanswer3, concept1_3);
	// Đục mắt phải
	ConceptAnswerDto conceptanswer4 = new ConceptAnswerDto();
ConceptDto answer4 = new ConceptDto();
setConceptAnswer("pe-0000030304", "Đục mắt phải", answer4, conceptanswer4, concept1_3);
	// xuất huyết mắt phải
	ConceptAnswerDto conceptanswer5 = new ConceptAnswerDto();
	ConceptDto answer5 = new ConceptDto();
	setConceptAnswer("pe-0000030305", "Xuất huyết mắt phải", answer5, conceptanswer5, concept1_3);
// Bóng pha lê mắt phải
	ConceptAnswerDto conceptanswer6 = new ConceptAnswerDto();
ConceptDto answer6 = new ConceptDto();
	setConceptAnswer("pe-0000030306", "Bóng pha lê thể sau mắt phải", answer6, conceptanswer6, concept1_3);
}
public void createGhiChuThuyTinhDichConcept(ConceptDto parent) {
	// create
	ConceptDto concept1_10 = new ConceptDto();
	setConceptQuestion("pe-00000304","Ghi chú mắt trái", parent, concept1_10);
	// save
	conceptService.saveOrUpdate(null, concept1_10);
	
	ConceptDto concept1_11 = new ConceptDto();
	setConceptQuestion("pe-00000305","Ghi chú mắt phải", parent, concept1_11);
	// save
	conceptService.saveOrUpdate(null, concept1_11);
}
private void createVanNhan(ConceptDto parent) {
	//create parent 
	ConceptDto concept1 = new ConceptDto();
	setConceptChill("pe-0000020", "Vận nhãn", parent, concept1);
	ConceptDto VanNhan = conceptService.getConceptByCode("pe-0000020");
//create chill
	this.createNhoGianDongTuVanNhanConcept(VanNhan);
this.createBinhThuongVanNhanConcept(parent);
this.createGhiChuVanNhan(parent);
}



private void createNhoGianDongTuVanNhanConcept(ConceptDto parent) {
	// create concept question
	ConceptDto concept1_1 = new ConceptDto();
	setConceptQuestion("pe-000002001", "Nhỏ giãn đồng tử vận nhãn", parent, concept1_1);
	// create concept answer
	// Mat trai
	ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
	ConceptDto answer1 = new ConceptDto();
	setConceptAnswer("pe-00000200101", "Nhỏ giãn đồng tử vận nhãn mắt phải", answer1, conceptanswer1, concept1_1);
	// Mat phai
	ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
	ConceptDto answer2 = new ConceptDto();
	setConceptAnswer("pe-00000200102", "Nhỏ giãn đồng tử vẫn nhãn mắt trái", answer2, conceptanswer2, concept1_1);
	// save
	conceptService.saveOrUpdate(null, concept1_1);
}


private void createBinhThuongVanNhanConcept(ConceptDto parent) {
	// create concept question
	ConceptDto concept1_1 = new ConceptDto();
	setConceptQuestion("pe-000002002", "Bình thường vận nhãn", parent, concept1_1);
	// create concept answer
	// Mat trai
	ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
	ConceptDto answer1 = new ConceptDto();
	setConceptAnswer("pe-00000200201", "Bình thường mắt phải", answer1, conceptanswer1, concept1_1);
	// Mat phai
	ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
	ConceptDto answer2 = new ConceptDto();
	setConceptAnswer("pe-00000200202", "Bình thường mắt trái", answer2, conceptanswer2, concept1_1);
	// save
	conceptService.saveOrUpdate(null, concept1_1);
}
private void createGhiChuVanNhan(ConceptDto parent) {
	// create concept question
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-000002003", "Ghi chú vận nhãn mắt phải", parent, concept1_1);
		ConceptDto concept1_2 = new ConceptDto();
		setConceptQuestion("pe-000002004", "Ghi chú vận nhãn mắt trái", parent, concept1_1);
}
private void createHocMat(ConceptDto parent) {
	//create parent 
	ConceptDto concept1 = new ConceptDto();
	setConceptChill("pe-0000019", "Hốc mắt", parent, concept1);
	ConceptDto VanNhan = conceptService.getConceptByCode("pe-0000019");
//create chill
	this.createNhoGianDongTuHocMatConcept(VanNhan);
this.createBinhThuongHocMatConcept(parent);
this.createGhiChuHocMat(parent);
}



private void createNhoGianDongTuHocMatConcept(ConceptDto parent) {
	// create concept question
	ConceptDto concept1_1 = new ConceptDto();
	setConceptQuestion("pe-000001901", "Nhỏ giãn đồng tử hốc mắt", parent, concept1_1);
	// create concept answer
	// Mat trai
	ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
	ConceptDto answer1 = new ConceptDto();
	setConceptAnswer("pe-00000190101", "Nhỏ giãn đồng tử hốc mắt mắt phải", answer1, conceptanswer1, concept1_1);
	// Mat phai
	ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
	ConceptDto answer2 = new ConceptDto();
	setConceptAnswer("pe-00000190102", "Nhỏ giãn đồng tử hốc mắt mắt trái", answer2, conceptanswer2, concept1_1);
	// save
	conceptService.saveOrUpdate(null, concept1_1);
}


private void createBinhThuongHocMatConcept(ConceptDto parent) {
	// create concept question
	ConceptDto concept1_1 = new ConceptDto();
	setConceptQuestion("pe-000001902", "Bình thường hốc mắt", parent, concept1_1);
	// create concept answer
	// Mat trai
	ConceptAnswerDto conceptanswer1 = new ConceptAnswerDto();
	ConceptDto answer1 = new ConceptDto();
	setConceptAnswer("pe-00000190201", "Bình thường hốc mắt mắt phải", answer1, conceptanswer1, concept1_1);
	// Mat phai
	ConceptAnswerDto conceptanswer2 = new ConceptAnswerDto();
	ConceptDto answer2 = new ConceptDto();
	setConceptAnswer("pe-00000190202", "Bình thường hốc mắt mắt trái", answer2, conceptanswer2, concept1_1);
	// save
	conceptService.saveOrUpdate(null, concept1_1);
}
private void createGhiChuHocMat(ConceptDto parent) {
	// create concept question
		ConceptDto concept1_1 = new ConceptDto();
		setConceptQuestion("pe-000001903", "Ghi chú hốc mắt mắt phải", parent, concept1_1);
		ConceptDto concept1_2 = new ConceptDto();
		setConceptQuestion("pe-000001904", "Ghi chú hốc mắt mắt trái", parent, concept1_1);
}

	
	public void setConceptParent(String code, String name, ConceptDto conceptParent) {
		conceptParent.setCode(code);
		conceptParent.setName(name);
		conceptParent
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		conceptParent.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, conceptParent);
	}

	public void setConceptChill(String code, String name, ConceptDto conceptParent, ConceptDto conceptChill) {
		conceptChill.setCode(code);
		conceptChill.setName(name);
		conceptChill.setParent(conceptParent);
		conceptChill
				.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		conceptChill.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptService.saveOrUpdate(null, conceptChill);
	}

	public void setConceptQuestion(String code, String name, ConceptDto conceptParent, ConceptDto conceptQuestion) {
		conceptQuestion.setCode(code);
		conceptQuestion.setName(name);
		conceptQuestion.setParent(conceptParent);
		conceptQuestion.setConceptDataType(
				conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_CODED));
		conceptQuestion.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		conceptQuestion.setConceptAnswersDto(new HashSet<>());
	}

	public void setConceptAnswer(String code, String name, ConceptDto answer, ConceptAnswerDto conceptAnswer,
			ConceptDto conceptQuestion) {
		answer.setCode(code);
		answer.setName(name);
		answer.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		answer.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		answer = conceptService.saveOrUpdate(null, answer);
		conceptAnswer.setAnswerConcept(answer);
		conceptAnswer.setConcept(conceptQuestion);
		conceptQuestion.getConceptAnswersDto().add(conceptAnswer);
		
	}
	
	public void setNewConceptAnswer(String code, String name, ConceptDto conceptQuestion) {
		ConceptDto answer = new ConceptDto();
		ConceptAnswerDto conceptAnswer = new ConceptAnswerDto();
		answer.setCode(code);
		answer.setName(name);
		answer.setConceptDataType(conceptDatatypeService.getConceptDatatypeByCode(ConceptUtil.CONCEPT_DATATYPE_TEXT));
		answer.setConceptType(conceptTypeService.getConceptTypeByCode(ConceptUtil.CONCEPT_TYPE_ENCOUNTER));
		answer = conceptService.saveOrUpdate(null, answer);
		conceptAnswer.setAnswerConcept(answer);
		conceptAnswer.setConcept(conceptQuestion);
		conceptQuestion.getConceptAnswersDto().add(conceptAnswer);
		
	}

}
