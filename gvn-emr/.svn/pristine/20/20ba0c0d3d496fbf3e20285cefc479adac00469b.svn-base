package com.globits.emr.dto.concept;

import java.util.HashSet;
import java.util.Set;

import com.globits.core.dto.BaseObjectDto;
import com.globits.emr.domain.concept.Concept;
import com.globits.emr.domain.concept.ConceptAnswer;
import com.globits.emr.domain.concept.ConceptAttribute;
import com.globits.emr.domain.concept.ConceptDatatype;
import com.globits.emr.domain.concept.ConceptNumeric;
import com.globits.emr.domain.concept.ConceptType;

public class ConceptDto extends BaseObjectDto {
	private ConceptTypeDto conceptType;
    private ConceptDatatypeDto conceptDataType;
    private ConceptDto parent;
    private Set<ConceptAnswerDto> conceptAnswersDto; 
    private Set<ConceptNumericsDto> conceptNumericsDto;
    private Set<ConceptAttributeDto> conceptAttributesDto;
    private String name;
	private String code;
	private String description;
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getCode() {
		return code;
	}
	public void setCode(String code) {
		this.code = code;
	}
	public String getDescription() {
		return description;
	}
	public void setDescription(String description) {
		this.description = description;
	}

    public ConceptTypeDto getConceptType() {
		return conceptType;
	}
	public void setConceptType(ConceptTypeDto conceptType) {
		this.conceptType = conceptType;
	}
	public ConceptDatatypeDto getConceptDataType() {
		return conceptDataType;
	}
	public void setConceptDataType(ConceptDatatypeDto conceptDataType) {
		this.conceptDataType = conceptDataType;
	}
	public ConceptDto getParent() {
		return parent;
	}
	public void setParent(ConceptDto parent) {
		this.parent = parent;
	}
	public Set<ConceptAnswerDto> getConceptAnswersDto() {
		return conceptAnswersDto;
	}
	public void setConceptAnswersDto(Set<ConceptAnswerDto> conceptAnswersDto) {
		this.conceptAnswersDto = conceptAnswersDto;
	}
	public Set<ConceptNumericsDto> getConceptNumericsDto() {
		return conceptNumericsDto;
	}
	public void setConceptNumericsDto(Set<ConceptNumericsDto> conceptNumericsDto) {
		this.conceptNumericsDto = conceptNumericsDto;
	}

	
	public Set<ConceptAttributeDto> getConceptAttributesDto() {
		return conceptAttributesDto;
	}
	public void setConceptAttributesDto(Set<ConceptAttributeDto> conceptAttributesDto) {
		this.conceptAttributesDto = conceptAttributesDto;
	}
	public ConceptDto() {
	}

	public ConceptDto(Concept entity) {
		if (entity != null) {
            setId(entity.getId());
            if(entity.getConceptType() != null) {
            	this.conceptType = new ConceptTypeDto();
            	this.conceptType.setId(entity.getConceptType().getId());
            }
            if(entity.getConceptDataType() != null) {
            	this.conceptDataType = new ConceptDatatypeDto();
            	this.conceptDataType.setId(entity.getConceptDataType().getId());
            }
			if(entity.getParent() != null) {
	        	this.parent = new ConceptDto();
	        	this.parent.setId(entity.getParent().getId());
	        	this.parent.setCode(entity.getParent().getCode());
	        	this.parent.setName(entity.getParent().getName());
	        	this.parent.setDescription(entity.getParent().getDescription());
	        }
			if(entity.getConceptAnswers()!=null && entity.getConceptAnswers().size()>0) {
				this.conceptAnswersDto = new HashSet<ConceptAnswerDto>();
				for (ConceptAnswer ans : entity.getConceptAnswers()) {
					ConceptAnswerDto dto = new ConceptAnswerDto();
					dto.setId(ans.getId());
					//dto.setViewIndex(ans.getViewIndex());
					this.conceptAnswersDto.add(dto);
				}
			}
			if(entity.getConceptNumerics()!=null && entity.getConceptNumerics().size()>0) {
				this.conceptNumericsDto = new HashSet<ConceptNumericsDto>();
				for (ConceptNumeric numeric : entity.getConceptNumerics()) {
					ConceptNumericsDto dto = new ConceptNumericsDto();
					dto.setId(numeric.getId());
					//dto.setHiNormal(numeric.getHiNormal());
					this.conceptNumericsDto.add(dto);
				}
			}
			if(entity.getAttributes()!=null && entity.getAttributes().size()>0) {
				this.conceptAttributesDto = new HashSet<ConceptAttributeDto>();
				for (ConceptAttribute att : entity.getAttributes()) {
					ConceptAttributeDto dto = new ConceptAttributeDto();
					dto.setId(att.getId());
					//dto.setValue(att.getValue());
					this.conceptAttributesDto.add(dto);
				}
			}

		}
	}
    
}
